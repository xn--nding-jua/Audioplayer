/*
WARNING: Do NOT edit the input and output ports in this file in a text
editor if you plan to continue editing the block that represents it in
the Block Editor! File corruption is VERY likely to occur.
*/
/*
Copyright (C) 2023  Intel Corporation. All rights reserved.
Your use of Intel Corporation's design tools, logic functions 
and other software and tools, and any partner logic 
functions, and any output files from any of the foregoing 
(including device programming or simulation files), and any 
associated documentation or information are expressly subject 
to the terms and conditions of the Intel Program License 
Subscription Agreement, the Intel Quartus Prime License Agreement,
the Intel FPGA IP License Agreement, or other applicable license
agreement, including, without limitation, that your use is for
the sole purpose of programming logic devices manufactured by
Intel and sold by Intel or its authorized distributors.  Please
refer to the applicable agreement for further details, at
https://fpgasoftware.intel.com/eula.
*/
(header "symbol" (version "1.1"))
(symbol
	(rect 16 16 328 192)
	(text "noisegate" (rect 5 0 41 12)(font "Arial" ))
	(text "inst" (rect 8 160 20 172)(font "Arial" ))
	(port
		(pt 0 32)
		(input)
		(text "clk" (rect 0 0 10 12)(font "Arial" ))
		(text "clk" (rect 21 27 31 39)(font "Arial" ))
		(line (pt 0 32)(pt 16 32)(line_width 1))
	)
	(port
		(pt 0 48)
		(input)
		(text "sample_in[(bit_width-1)..0]" (rect 0 0 101 12)(font "Arial" ))
		(text "sample_in[(bit_width-1)..0]" (rect 21 43 122 55)(font "Arial" ))
		(line (pt 0 48)(pt 16 48)(line_width 3))
	)
	(port
		(pt 0 64)
		(input)
		(text "sync_in" (rect 0 0 31 12)(font "Arial" ))
		(text "sync_in" (rect 21 59 52 71)(font "Arial" ))
		(line (pt 0 64)(pt 16 64)(line_width 1))
	)
	(port
		(pt 0 80)
		(input)
		(text "threshold[(bit_width-1)..0]" (rect 0 0 96 12)(font "Arial" ))
		(text "threshold[(bit_width-1)..0]" (rect 21 75 117 87)(font "Arial" ))
		(line (pt 0 80)(pt 16 80)(line_width 3))
	)
	(port
		(pt 0 96)
		(input)
		(text "gain_min[7..0]" (rect 0 0 55 12)(font "Arial" ))
		(text "gain_min[7..0]" (rect 21 91 76 103)(font "Arial" ))
		(line (pt 0 96)(pt 16 96)(line_width 3))
	)
	(port
		(pt 0 112)
		(input)
		(text "coeff_attack[15..0]" (rect 0 0 74 12)(font "Arial" ))
		(text "coeff_attack[15..0]" (rect 21 107 95 119)(font "Arial" ))
		(line (pt 0 112)(pt 16 112)(line_width 3))
	)
	(port
		(pt 0 128)
		(input)
		(text "hold_ticks[15..0]" (rect 0 0 62 12)(font "Arial" ))
		(text "hold_ticks[15..0]" (rect 21 123 83 135)(font "Arial" ))
		(line (pt 0 128)(pt 16 128)(line_width 3))
	)
	(port
		(pt 0 144)
		(input)
		(text "coeff_release[15..0]" (rect 0 0 79 12)(font "Arial" ))
		(text "coeff_release[15..0]" (rect 21 139 100 151)(font "Arial" ))
		(line (pt 0 144)(pt 16 144)(line_width 3))
	)
	(port
		(pt 312 32)
		(output)
		(text "sample_out[(bit_width-1)..0]" (rect 0 0 107 12)(font "Arial" ))
		(text "sample_out[(bit_width-1)..0]" (rect 184 27 291 39)(font "Arial" ))
		(line (pt 312 32)(pt 296 32)(line_width 3))
	)
	(port
		(pt 312 48)
		(output)
		(text "sync_out" (rect 0 0 37 12)(font "Arial" ))
		(text "sync_out" (rect 254 43 291 55)(font "Arial" ))
		(line (pt 312 48)(pt 296 48)(line_width 1))
	)
	(port
		(pt 312 64)
		(output)
		(text "gate_closed_out" (rect 0 0 64 12)(font "Arial" ))
		(text "gate_closed_out" (rect 227 59 291 71)(font "Arial" ))
		(line (pt 312 64)(pt 296 64)(line_width 1))
	)
	(parameter
		"bit_width"
		"24"
		""
		(type "PARAMETER_SIGNED_DEC")	)
	(drawing
		(rectangle (rect 16 16 296 160)(line_width 1))
	)
	(annotation_block (parameter)(rect 328 -64 428 16))
)
